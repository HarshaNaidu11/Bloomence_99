// src/App.jsx
import React, { useState } from "react";
import { Routes, Route, useNavigate, Navigate } from "react-router-dom";

// ðŸŸ¢ FIX 1: Standard Imports to ensure SplitText and TextType work
import Signup from "./components/Signup/Signup";
import Dashboard from "./pages/Dashboard/Dashboard";
import Questionnaires from "./pages/Questionnaires/Questionnaires";
import AIRecommendation from "./pages/AIRecommendation/AIRecommendation";
import EmergencyContact from "./pages/EmergencyContact/EmergencyContact";
import PHQ9 from "./pages/Questionnaires/PHQ9";
import GAD7 from "./pages/Questionnaires/GAD7";
import LightRays from "./components/Lightrays/Lightrays"; 
import AboutSection from "./components/AboutSection/AboutSection";
import ValueSection from "./components/ValueSection/ValueSection"; 
import TestimonialScroller from "./components/TestimonialScroller/TestimonialScroller"; 
import Footer from "./components/Footer/Footer"; 
import SplitText from "./components/SplitText/SplitText"; // Explicitly imported
import TextType from "./components/TextType/TextType"; // Explicitly imported
import PrivacyPolicy from "./pages/PrivacyPolicy";
import AboutUs from "./pages/AboutUs";
import TermsOfUse from "./pages/TermsOfUse";
import "./App.css";

// Firebase/Auth Imports
import { auth } from './firebaseConfig'; 
import { signOut } from 'firebase/auth'; 
import { useAuth } from './context/AuthContext'; 


// Removed the old try/catch blocks as imports are now direct

// HoverButton component (unchanged)
function HoverButton({ children, onClick }) {
Â  const [hover, setHover] = React.useState(false);
Â  return (
Â  Â  <button
Â  Â  Â  onClick={onClick}
Â  Â  Â  onMouseEnter={() => setHover(true)}
Â  Â  Â  onMouseLeave={() => setHover(false)}
Â  Â  Â  style={{
Â  Â  Â  Â  border: "none",
Â  Â  Â  Â  background: hover ? "rgba(0, 200, 83, 0.1)" : "none",
Â  Â  Â  Â  color: hover ? "#00c853" : "inherit",
Â  Â  Â  Â  cursor: "pointer",
Â  Â  Â  Â  padding: "8px 12px",
Â  Â  Â  Â  borderRadius: "5px",
Â  Â  Â  Â  transition: "color 0.3s ease, background 0.3s ease",
Â  Â  Â  }}
Â  Â  >
Â  Â  Â  {children}
Â  Â  </button>
Â  );
}

// PROTECTED ROUTE COMPONENT (unchanged)
const ProtectedRoute = ({ element: Component, ...rest }) => {
Â  Â  const { currentUser, loading } = useAuth();

Â  Â  if (loading) {
Â  Â  Â  Â  return <div style={{ color: 'white', textAlign: 'center', paddingTop: '50vh' }}>Loading...</div>; 
Â  Â  }

Â  Â  if (currentUser) {
Â  Â  Â  Â  return <Component {...rest} />;
Â  Â  }

Â  Â  return <Navigate to="/signup" replace />;
};


// Profile Avatar with Dropdown Menu (unchanged)
function ProfileDropdown() {
Â  Â  const navigate = useNavigate();
Â  Â  const { currentUser } = useAuth();
Â  Â  const [isOpen, setIsOpen] = useState(false);

Â  Â  // --- Dynamic Color and Name Logic ---
Â  Â  const userName = currentUser.displayName || currentUser.email.split('@')[0];
Â  Â  const userNameInitial = userName[0].toUpperCase();
Â  Â  const userEmail = currentUser.email;

Â  Â  // Simple Hash Function to generate a stable, random color based on email
Â  Â  const stringToHslColor = (str) => {
Â  Â  Â  Â  let hash = 0;
Â  Â  Â  Â  for (let i = 0; i < str.length; i++) {
Â  Â  Â  Â  Â  Â  hash = str.charCodeAt(i) + ((hash << 5) - hash);
Â  Â  Â  Â  }
Â  Â  Â  Â  let h = hash % 360;
Â  Â  Â  Â  return 'hsl(' + h + ', 60%, 45%)'; 
Â  Â  };

Â  Â  const dynamicColor = stringToHslColor(userEmail || 'user');
Â  Â  const borderHighlightColor = dynamicColor;
Â  Â  // ------------------------------------

Â  Â  const handleSignOut = async () => {
Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  await signOut(auth);
Â  Â  Â  Â  Â  Â  navigate('/'); 
Â  Â  Â  Â  } catch (error) {
Â  Â  Â  Â  Â  Â  console.error("Error signing out:", error);
Â  Â  Â  Â  Â  Â  alert("Failed to sign out. Please try again.");
Â  Â  Â  Â  }
Â  Â  };

Â  Â  return (
Â  Â  Â  Â  <div style={{ position: 'relative', zIndex: 100 }}>
Â  Â  Â  Â  Â  Â  {/* 1. Avatar Button */}
Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setIsOpen(!isOpen)}
Â  Â  Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  width: '36px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  height: '36px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  borderRadius: '50%',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  backgroundColor: dynamicColor, 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  color: 'white',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  fontSize: '18px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  fontWeight: 'bold',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  border: isOpen ? `2px solid ${borderHighlightColor}` : 'none',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  cursor: 'pointer',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  display: 'flex',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alignItems: 'center',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  justifyContent: 'center',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  transition: 'all 0.2s'
Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  {userNameInitial}
Â  Â  Â  Â  Â  Â  </button>

Â  Â  Â  Â  Â  Â  {/* 2. Dropdown Menu */}
Â  Â  Â  Â  Â  Â  {isOpen && (
Â  Â  Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  position: 'absolute',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  top: '45px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  right: '0',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  backgroundColor: '#1c2b3a', 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  borderRadius: '8px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.4)',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  minWidth: '200px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  padding: '8px 0',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  textAlign: 'left'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div style={{ padding: '8px 16px', borderBottom: '1px solid #334155' }}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Display Name */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div style={{ color: dynamicColor, fontSize: '0.95rem', fontWeight: 'bold', marginBottom: '4px' }}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {userName}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Display Email */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div style={{ color: '#c0c0c0', fontSize: '0.8rem' }}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {userEmail}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={handleSignOut}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  width: '100%',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  padding: '10px 16px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  backgroundColor: 'transparent',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  border: 'none',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  color: '#e0e0e0',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  textAlign: 'left',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  cursor: 'pointer',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  fontSize: '0.9rem',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Sign Out
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </div>
Â  Â  );
}


// HomePage Component (Now fully functional with LightRays)
function HomePage() {
Â  const navigate = useNavigate();
Â  const { currentUser } = useAuth(); // Get current user state

Â  const renderAuthWidget = () => {
Â  Â  if (currentUser) {
Â  Â  Â  // Logged In: Show the clickable circular avatar/dropdown
Â  Â  Â  return <ProfileDropdown />;
Â  Â  }
Â  Â  // Not Logged In: Show Get Started button
Â  Â  return (
Â  Â  Â  <HoverButton onClick={() => navigate("/signup")}>
Â  Â  Â  Â  Get Started
Â  Â  Â  </HoverButton>
Â  Â  );
Â  };

Â  return (
Â  Â  <div className="homepage-body">
Â  Â  Â  {/* Header */}
Â  Â  Â  <header className="header">
Â  Â  Â  Â  <nav className="navbar">
Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  className="logo"
Â  Â  Â  Â  Â  Â  style={{ cursor: "pointer" }}
Â  Â  Â  Â  Â  Â  onClick={() => navigate("/")}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  BLOOMENCE
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <ul className="nav-menu">
Â  Â  Â  Â  Â  Â  <li><HoverButton onClick={() => navigate("/dashboard")}>Dashboard</HoverButton></li>
Â  Â  Â  Â  Â  Â  <li><HoverButton onClick={() => navigate("/questionnaires")}>Questionnaires</HoverButton></li>
Â  Â  Â  Â  Â  Â  <li><HoverButton onClick={() => navigate("/ai-recommendation")}>AI Recommendation</HoverButton></li>
Â  Â  Â  Â  Â  Â  <li><HoverButton onClick={() => navigate("/emergency-contact")}>Emergency Contact</HoverButton></li>
Â  Â  Â  Â  Â  </ul>
Â  Â  Â  Â  Â  {/* Render the dynamic Auth Widget */}
Â  Â  Â  Â  Â  {renderAuthWidget()} 
Â  Â  Â  Â  </nav>
Â  Â  Â  </header>

Â  Â  Â  {/* Hero Section */}
Â  Â  Â  <main className="hero-section">
Â  Â  Â  Â  <LightRays
Â  Â  Â  Â  Â  raysOrigin="top-center"
Â  Â  Â  Â  Â  raysColor="#00d9a5" 
Â  Â  Â  Â  Â  raysSpeed={0.5}
Â  Â  Â  Â  Â  lightSpread={0.8}
Â  Â  Â  Â  Â  rayLength={1.5}
Â  Â  Â  Â  Â  followMouse={true}
Â  Â  Â  Â  Â  mouseInfluence={0.2}
Â  Â  Â  Â  Â  distortion={0.03}
Â  Â  Â  Â  />
Â  Â  Â  Â  <div className="hero-content">
Â  Â  Â  Â  Â  <SplitText text="MASTER YOUR MIND, TRANSFORM YOUR LIFE" />
Â  Â  Â  Â  Â  <TextType
Â  Â  Â  Â  Â  Â  text="Discover your mental health score, track your growth, and take control of your emotional well-being."
Â  Â  Â  Â  Â  Â  typingSpeed={50}
Â  Â  Â  Â  Â  Â  deletingSpeed={30}
Â  Â  Â  Â  Â  Â  pauseDuration={2000}
Â  Â  Â  Â  Â  Â  loop={true}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>
Â  Â  Â  </main>

Â  Â  Â  {/* About Section renders below */}
Â  Â  Â  <AboutSection /> 
Â  Â  Â  Â <div className="scroller-wrapper"> 
Â  Â  Â  Â  Â  <TestimonialScroller />
Â  Â  Â  </div>
Â  Â  Â  <ValueSection /> 
Â  Â  Â  {/* ðŸŸ¢ FIX 2: Footer is now rendered */}
Â  Â  Â 
Â  Â  </div>
Â  );
}

// App Routes (unchanged)
function App() {
Â  return (
Â  Â  <Routes>
Â  Â  Â  {/* Public Routes */}
Â  Â  Â  <Route path="/" element={<HomePage />} />
Â  Â  Â  <Route path="/signup" element={<Signup />} />
Â  Â  Â  
Â  Â  Â  {/* SECURED ROUTES */}
Â  Â  Â  <Route path="/dashboard" element={<ProtectedRoute element={Dashboard} />} />
Â  Â  Â  <Route path="/questionnaires" element={<ProtectedRoute element={Questionnaires} />} />
Â  Â  Â  <Route path="/ai-recommendation" element={<ProtectedRoute element={AIRecommendation} />} />
Â  Â  Â  <Route path="/emergency-contact" element={<ProtectedRoute element={EmergencyContact} />} />
Â  Â  Â  <Route path="/phq9" element={<ProtectedRoute element={PHQ9} />} />
Â  Â  Â  <Route path="/gad7" element={<ProtectedRoute element={GAD7} />} />
      <Route path="/AboutUs" element={<AboutUs />} />
      <Route path="/PrivacyPolicy" element={<PrivacyPolicy />} />
      <Route path="/TermsOfUse" element={<TermsOfUse />} />
Â  Â  </Routes>
Â  );
}

export default App;
