// src/pages/Questionnaires/GAD7.jsx

import React, { useState } from "react";
import { useNavigate } from "react-router-dom"; 
import { useAuth } from '../../context/AuthContext'; 
import "./PHQ9.css"; 

// --- GAD-7 Questionnaire Data ---
const gad7Questions = [
Â  "Feeling nervous, anxious, or on edge",
Â  "Not being able to stop or control worrying",
Â  "Worrying too much about different things",
Â  "Trouble relaxing",
Â  "Being so restless that it's hard to sit still",
Â  "Becoming easily annoyed or irritable",
Â  "Feeling afraid as if something awful might happen",
];
const options = [
Â  { value: 0, label: "Not at all" },
Â  { value: 1, label: "Several days" },
Â  { value: 2, label: "More than half the days" },
Â  { value: 3, label: "Nearly every day" },
];

export default function GAD7() {
  const navigate = useNavigate();
  const { currentUser } = useAuth();
  const [currentQ, setCurrentQ] = useState(0); 
  const [answers, setAnswers] = useState(Array(gad7Questions.length).fill(null));
  const [submitted, setSubmitted] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

Â  // Logic: Allows selection and deselection
Â  const handleAnswer = (value) => {
Â  Â  const updatedAnswers = [...answers];
Â  Â  if (updatedAnswers[currentQ] === value) {
Â  Â  Â  Â  updatedAnswers[currentQ] = null;
Â  Â  } else {
Â  Â  Â  Â  updatedAnswers[currentQ] = value;
Â  Â  }
Â  Â  setAnswers(updatedAnswers);
Â  Â  setError(null);
Â  };

Â  const handleNext = () => {
Â  Â  Â  if (answers[currentQ] === null) {
Â  Â  Â  Â  Â  setError("Please select an option before proceeding.");
Â  Â  Â  Â  Â  return;
Â  Â  Â  }
Â  Â  Â  setError(null);
Â  Â  Â  if (currentQ < gad7Questions.length - 1) {
Â  Â  Â  Â  Â  setCurrentQ(currentQ + 1);
Â  Â  Â  } 
Â  };

  const handleSubmit = async (finalAnswers) => {
    setLoading(true);
    setError(null);
    
    if (!currentUser) { 
        setError("You must be logged in to submit results.");
        setLoading(false);
        return;
    }

    try {
        const idToken = await currentUser.getIdToken(); 
        const totalScore = finalAnswers.reduce((sum, val) => sum + (val || 0), 0);
        
        // ðŸŸ¢ Extract user details
        const userName = currentUser.displayName;
        const userEmail = currentUser.email;

        // API Submission to secure Node.js Backend
        const response = await fetch('http://localhost:3001/api/results/save', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${idToken}` 
            },
            body: JSON.stringify({
                questionnaireType: 'GAD-7', 
                totalScore: totalScore,
                userName: userName, // ðŸŸ¢ Added for MongoDB
                userEmail: userEmail, // ðŸŸ¢ Added for MongoDB
                firebaseUid: currentUser.uid
            })
        });

        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || 'Failed to save result.');
        }

        setLoading(false);
        // ðŸŸ¢ FIX: Show success screen instead of navigating immediately
        setSubmitted(true);
        
    } catch (err) {
        console.error("Submission error:", err);
        setError(err.message || "Submission failed. Please check server.");
        setLoading(false);
    }
  };
Â  
  // ðŸŸ¢ Rendering Logic for the Success Screen
  if (submitted) {
    const totalScore = answers.reduce((sum, val) => sum + (val || 0), 0);
    return (
        <div className="phq9-wrapper"> 
            <div className="phq9-container result-box success">
                <h2>GAD-7 Complete!</h2>
                <p>Your Anxiety Score is: **{totalScore}**</p>
                <p>All assessments complete. View your personalized dashboard.</p>
                <button 
                    className="submit-btn" 
                    onClick={() => navigate("/dashboard")}
                    style={{ marginTop: '20px' }}
                >
                    View Dashboard â†’
                </button>
            </div>
        </div>
    );
  }

Â  return (
Â  Â  <div className="phq9-wrapper"> 
Â  Â  Â  <div className="phq9-container">
Â  Â  Â  Â  <h2>GAD-7 Questionnaire</h2>
Â  Â  Â  Â  
Â  Â  Â  Â  <p className="intro-text">
Â  Â  Â  Â  Â  **Over the last 2 weeks, how often have you been bothered by any of the following problems?**
Â  Â  Â  Â  </p>
Â  Â  Â  Â  
Â  Â  Â  Â  <p className="progress-tracker">
Â  Â  Â  Â  Â  Question {currentQ + 1} of {gad7Questions.length}
Â  Â  Â  Â  </p>

Â  Â  Â  Â  <div className="question-card single-question-view">
Â  Â  Â  Â  Â  <p className="question-text">
Â  Â  Â  Â  Â  Â  {currentQ + 1}. {gad7Questions[currentQ]}
Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  <div className="options">
Â  Â  Â  Â  Â  Â  {options.map((opt) => (
Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  key={opt.value}
Â  Â  Â  Â  Â  Â  Â  Â  className={`option-button ${answers[currentQ] === opt.value ? 'selected' : ''}`}
Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleAnswer(opt.value)}
Â  Â  Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <span className="option-indicator"></span> 
Â  Â  Â  Â  Â  Â  Â  Â  {opt.label}
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  Â  
Â  Â  Â  Â  {error && <p className="error-message">ðŸš¨ {error}</p>}
Â  Â  Â  </div>
Â  Â  Â  
Â  Â  Â  <div className="navigation-controls-outside">
Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  className="nav-btn prev"
Â  Â  Â  Â  Â  onClick={() => setCurrentQ(currentQ - 1)}
Â  Â  Â  Â  Â  disabled={currentQ === 0 || loading}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <span>&larr; Previous</span>
Â  Â  Â  Â  </button>
Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  className="nav-btn next"
Â  Â  Â  Â  Â  onClick={() => currentQ === gad7Questions.length - 1 ? handleSubmit(answers) : handleNext()}
Â  Â  Â  Â  Â  disabled={loading} 
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <span>
Â  Â  Â  Â  Â  Â  {loading 
Â  Â  Â  Â  Â  Â  Â  ? 'Processing...' 
Â  Â  Â  Â  Â  Â  Â  : (currentQ === gad7Questions.length - 1 
Â  Â  Â  Â  Â  Â  Â  Â  Â  ? 'Submit' 
Â  Â  Â  Â  Â  Â  Â  Â  Â  : 'Next Question'
Â  Â  Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  </button>
Â  Â  Â  Â  
Â  Â  Â  </div>
Â  Â  </div>
Â  );
}